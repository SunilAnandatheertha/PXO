Strings_01 = {'*Heading';
'** Job name: sunil01 Model name: Model-1';
'** Generated by: Abaqus/CAE 6.14-1';
'*Preprint, echo=NO, model=NO, history=NO, contact=NO';
'**';
'** PARTS';
'**';
'*Part, name=Part-1';
'*Node'};

xincr = 2;
yincr = 1;
xbase = 1:xincr:4;
ybase = 1:yincr:2;
[x,y] = meshgrid(xbase,ybase);
xc = x;
yc = y;
plot(x, y, 'ko'), hold on
xbl = x-xincr/2; ybl = y-yincr/2;
xbr = x+xincr/2; ybr = y-yincr/2;
plot(xbl, ybl, 'c.')
plot(xbr, ybr, 'b.')

xtl = x-xincr/2; ytl = y+yincr/2;
xtl(1:size(xtl,1)-1,:)=[];
ytl(1:size(ytl,1)-1,:)=[];
plot(xtl, ytl, 'r.')

xtr = x+xincr/2; ytr = y+yincr/2;
xtr(1:size(xtr,1)-1,:)=[];
ytr(1:size(ytr,1)-1,:)=[];
xtr(1:end-1)=[];
ytr(1:end-1)=[];
plot(xtr, ytr, 'g.')

xl = x-xincr/2; yl = y;
plot(xl, yl, 'bx')
xr = x+xincr/2; yr = y;
xr(:,1:size(xr,2)-1)=[];
yr(:,1:size(yr,2)-1)=[];
plot(xr, yr, 'g*')

xb = x; yb = y - yincr/2;
plot(xb, yb, 'kx')
xt = x; yt = y + yincr/2;
xt(1:size(xr,1)-1,:)=[];
yt(1:size(yr,1)-1,:)=[];
plot(xt, yt, 'r*')


element_Type = 'CPS4';
switch element_Type
    case {'CPS4', 'trisimple'}
        nd_x = [xbl(:); xbr(:); xtl(:); xtr(:)];
        nd_y = [ybl(:); ybr(:); ytl(:); ytr(:)];
        nd_xy = unique([nd_x nd_y], 'rows');
        nd_x = nd_xy(:,1);
        nd_y = nd_xy(:,2);
        ElTable = zeros(numel(x),5);
    case {'CPS8', 'quadegdefacecentre', 'triedgecentre', 'triegdefacecentre'}
        nd_x = [xbl(:); xbr(:); xtl(:); xtr(:); xl(:); xr(:); xb(:); xt(:)];
        nd_y = [ybl(:); ybr(:); ytl(:); ytr(:); yl(:); yr(:); yb(:); yt(:)];
        nd_xy = unique([nd_x nd_y], 'rows');
        nd_x = nd_xy(:,1);
        nd_y = nd_xy(:,2);
        ElTable = zeros(numel(x),9);
    otherwise
        disp('invalid element type input. Creating 4-node quad')
        nd_x = [xbl(:); xbr(:); xtl(:); xtr(:)];
        nd_y = [ybl(:); ybr(:); ytl(:); ytr(:)];
        nd_xy = unique([nd_x nd_y], 'rows');
        nd_x = nd_xy(:,1);
        nd_y = nd_xy(:,2);
end

plot(nd_x, nd_y, 'co')

enum = reshape(1:numel(x), size(x));
for count = 1:numel(x)
   text(x(count), y(count), num2str(enum(count)), 'fontweight', 'bold', 'color', 'r', 'fontsize', 12)
end

switch element_Type
    case {'CPS8', 'CPS4'}
        for count = 1:numel(x)
            enumcount = count;
            xe = x(enumcount);
            ye = y(enumcount);
            % ebox: element bounding box
            xfactor = 1.2*xincr/2;
            yfactor = 1.2*yincr/2;
            ebbox_x = xe + xfactor*[-1 +1 +1 -1];
            ebbox_y = ye + yfactor*[-1 -1 +1 +1];
            % plot(ebbox_x, ebbox_y, 'ks', 'markerfacecolor', 'k')
            left_x  = find(nd_x>ebbox_x(1));
            right_x = find(nd_x<ebbox_x(2));
            top_y   = find(nd_y>ebbox_y(1));
            bot_y   = find(nd_y<ebbox_y(3));
            subset  = intersect(intersect(intersect(left_x, right_x), top_y), bot_y);
            ElTable(count,:) = [count subset'];
            subsetxy = unique([nd_x(subset) nd_y(subset)], 'rows');
            plot(subsetxy(:,1), subsetxy(:,2), 'ks', 'markerfacecolor', rand(1,3), 'markersize', 15)
            pause(0.5)
        end
        NodeMatrix = [transpose(1:numel(nd_x)) nd_x nd_y];
%         *Element, type=CPS8
    case 'trisimple'
    otherwise
        disp('Invalid input')
end

for count = 1:size(NodeMatrix,1)
   text(NodeMatrix(count,2), NodeMatrix(count,3), num2str(NodeMatrix(count,1)), 'fontweight', 'bold', 'color', 'g', 'fontsize', 12)
end

Strings_02 = {'*Element, type='; element_Type};